version: 0.2
# https://docs.aws.amazon.com/codepipeline/latest/userguide/ecs-cd-pipeline.html

# input variables that have to be provided by the triggering pipeline:
# IMAGE_REPO_NAME
# CONTAINER_NAME

phases:
  # install:
  #   runtime-versions:
  #     docker: 20
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - AWS_REGION=$AWS_DEFAULT_REGION
      - AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - echo Pull started on `date`
      - docker pull $REPOSITORY_URI:latest || true
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build --cache-from $REPOSITORY_URI:latest -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      # https://stackoverflow.com/questions/58426387/why-does-codepipeline-require-an-imagedefinitions-json-when-ecs-task-definitio
      - printf '[{"name":"%s","imageUri":"%s"}]' $CONTAINER_NAME $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json

# https://docs.aws.amazon.com/codepipeline/latest/userguide/ecs-cd-pipeline.html
# for plain Amazon ECS deployment; for Amazon ECS (Blue/Green) we need to create imageDetail.json
artifacts:
    files: imagedefinitions.json
